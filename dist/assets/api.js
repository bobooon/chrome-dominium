const n={message:"Tabulence"},o={message:"Adds awareness of the last tab and provides additional safeguards when closing tabs."},a={message:"Close the current tab"},c={message:"You must assign a keyboard shortcut to use these options."},r={message:"Assigned Keyboard Shortcut"},l={message:"Assign a keyboard shortcut to close tabs based on the enabled options."},g={message:"Assign"},i={message:"Prevent closing pinned tabs"},u={message:"When enabled, pinned tabs will not be closed when using the keyboard shortcut to close tabs."},d={message:"Prevent closing tabs within groups"},h={message:"When enabled, grouped tabs will not be closed when using the keyboard shortcut to close tabs."},m={message:"Prevent closing empty new tabs"},b={message:"When enabled, empty new tabs will not be automatically closed when another tab is created."},p={name:n,description:o,closeCommand:a,closeUnassigned:c,closeShortcut:r,closeShortcutHelp:l,closeConfigure:g,closePinned:i,closePinnedHelp:u,closeGrouped:d,closeGroupedHelp:h,closeEmpty:m,closeEmptyHelp:b},y={closeEmpty:!1,closeGrouped:!0,closePinned:!0},w=p;function e(){}e.getMessage=(s,t)=>{try{return chrome.i18n.getMessage(s,t)}catch{return w[s].message||""}};e.getSettings=async()=>{try{return await chrome.runtime.sendMessage({type:"getSettings"})}catch{return structuredClone(y)}};e.saveSettings=async s=>{try{await chrome.runtime.sendMessage({type:"saveSettings",payload:s})}catch{}};e.getShortcut=async()=>{try{return await chrome.runtime.sendMessage({type:"getShortcut"})}catch{return""}};e.openShortcuts=()=>{try{chrome.tabs.create({url:"chrome://extensions/shortcuts"})}catch{}};export{e as c,y as d};
